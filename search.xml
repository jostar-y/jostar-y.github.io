<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>lager</title>
    <url>/2021/04/15/lager/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="1、基本配置"><a href="#1、基本配置" class="headerlink" title="1、基本配置"></a>1、基本配置</h4><p>rebar.config</p>
<figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line">{erl_opts,[</span><br><span class="line">    ...</span><br><span class="line">    {parse_transform, lager_transform},     </span><br><span class="line">    {lager_truncation_size, <span class="number">1024</span>},          <span class="comment">% 限制单条日志最大尺寸</span></span><br><span class="line">    {lager_extra_sinks, [msg]},             <span class="comment">% 扩展日志</span></span><br><span class="line">    ...</span><br><span class="line">]}.</span><br><span class="line"></span><br><span class="line">{deps,[</span><br><span class="line">       {lager, <span class="string">"3.9.1"</span>}</span><br><span class="line">      ]}</span><br></pre></td></tr></tbody></table></figure>

<span id="more"></span>

<p>sys.config</p>
<figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    {lager_test, []},</span><br><span class="line">    {lager, [</span><br><span class="line"></span><br><span class="line">        {log_root, <span class="string">"./log"</span>},                <span class="comment">% 日志根目录</span></span><br><span class="line"></span><br><span class="line">        {crash_log, <span class="string">"crash.log"</span>},           <span class="comment">% 设置后当系统发生严重崩溃时，会将日志记录在此文件中</span></span><br><span class="line">        {crash_log_msg_size, <span class="number">65536</span>},        <span class="comment">% 崩溃日志的消息大小的限制</span></span><br><span class="line">        {crash_log_size, <span class="number">10485760</span>},         <span class="comment">% 崩溃日志的文件大小限制</span></span><br><span class="line">        {crash_log_data, <span class="string">"$D0"</span>},            <span class="comment">% 崩溃日志的切割时间</span></span><br><span class="line">        {crash_log_count, <span class="number">5</span>},               <span class="comment">% 崩溃日志的切割数量</span></span><br><span class="line"></span><br><span class="line">        {reverse_pretty_stacktrace, true},      <span class="comment">% 翻转堆栈输出顺序</span></span><br><span class="line">        {error_logger_redirect, true},          <span class="comment">% 是否重定向error_logger消息</span></span><br><span class="line">        {error_logger_hwm, <span class="number">50</span>},                 <span class="comment">% error_logger消息的高水位线，超过将被丢弃 如果想要缓存一定数量消息，则开启下面的属性</span></span><br><span class="line">        <span class="comment">% {error_logger_flush_queue, true},       % 开启丢弃消息 默认：true</span></span><br><span class="line">        <span class="comment">% {error_logger_flush_threshold, 1000},   % 当消息超过高水位线时，并且超过此上线时，超过的消息将被丢弃 默认：0</span></span><br><span class="line"></span><br><span class="line">        {async_threshold, <span class="number">20</span>},              <span class="comment">% 当日志消息积累到一定数量时切换到同步模式（反压）设置为undefined禁用    可以单独在sink中定义</span></span><br><span class="line">        {async_threshold_window, <span class="number">5</span>},        <span class="comment">% 档日志消息减少到一定数量时切换到异步模式  比如这里就是20 - 5 = 15 当消息少于15时切回异步  可以单独在sink中定义</span></span><br><span class="line">        <span class="comment">% {flush_queue, true}                 % 功能与 error_logger_flush_queue 一样 可以单独在sink中定义 默认：true</span></span><br><span class="line">        <span class="comment">% {flush_threshold, 1000}             % 功能与 error_logger_flush_threshold 一样 可以单独在sink中定义 默认：0</span></span><br><span class="line"></span><br><span class="line">        {handlers, [</span><br><span class="line">            <span class="comment">%% lager_console_backend 可设置参数</span></span><br><span class="line">            <span class="comment">%% level 日志级别（需要定义）</span></span><br><span class="line">            <span class="comment">%% formatter 格式化模块 默认：lager_default_formatter</span></span><br><span class="line">            <span class="comment">%% formatter_config 日志格式，默认：[time, " ", color, "[", severity,"] ", message]</span></span><br><span class="line">            <span class="comment">%% user_stderr 是否使用stderr 默认：false</span></span><br><span class="line">            <span class="comment">%% group_leader 指定要输出的io_server 默认：false 使用user进程作为io_server</span></span><br><span class="line">            {lager_console_backend, [</span><br><span class="line">                {level, debug},</span><br><span class="line">                {formatter_config, [time, <span class="string">" "</span>, <span class="string">"["</span>, serverity, <span class="string">"]"</span>, module, <span class="string">":"</span>, function, <span class="string">" "</span>, message, <span class="string">"\n"</span>]}</span><br><span class="line">            ]},</span><br><span class="line"></span><br><span class="line">            <span class="comment">%% lager_file_backend 可设置参数</span></span><br><span class="line">            <span class="comment">%% file 日志文件名（需要定义）</span></span><br><span class="line">            <span class="comment">%% level 日志级别 默认：&gt;=info</span></span><br><span class="line">            <span class="comment">%% size 日志文件大小 默认：10MB</span></span><br><span class="line">            <span class="comment">%% date 日志切割时间 默认：$D0 每日0点</span></span><br><span class="line">            <span class="comment">%% count 日志切分数量 默认：5</span></span><br><span class="line">            <span class="comment">%% rotation 日志切割处理模块 默认：lager_rotator_default</span></span><br><span class="line">            <span class="comment">%% formatter 格式化模块 默认：lager_default_formatter</span></span><br><span class="line">            <span class="comment">%% formatter_config 日志格式（需要定义）</span></span><br><span class="line">            <span class="comment">%% sync_on 立即同步日志级别 默认：error</span></span><br><span class="line">            <span class="comment">%% sync_interval 日志写文件间隔 默认：1000毫秒</span></span><br><span class="line">            <span class="comment">%% sync_size 日志写文件大小 默认：64KB</span></span><br><span class="line">            {lager_file_backend, [</span><br><span class="line">                {file, <span class="string">"error.log"</span>},</span><br><span class="line">                {level, '&gt;=error'},</span><br><span class="line">                {formatter_config, [time, <span class="string">" "</span>, <span class="string">"["</span>, serverity, <span class="string">"]"</span>, module, <span class="string">":"</span>, function, <span class="string">" "</span>, message, <span class="string">"\n"</span>]}</span><br><span class="line">            ]},</span><br><span class="line">            {lager_file_backend, [</span><br><span class="line">                {file, <span class="string">"info.log"</span>},</span><br><span class="line">                {level, '&lt;=warning'},</span><br><span class="line">                {formatter_config, [time, <span class="string">" "</span>, <span class="string">"["</span>, serverity, <span class="string">"]"</span>, module, <span class="string">":"</span>, function, <span class="string">" "</span>, message, <span class="string">"\n"</span>]}</span><br><span class="line">            ]}</span><br><span class="line">        ]},</span><br><span class="line"></span><br><span class="line">        <span class="comment">% {killer_hwm, 1000},               % 如果消息高水位线超过此值 则删掉相关接收器进程 默认：undefined</span></span><br><span class="line">        <span class="comment">% {killer_reinstall_after, 5000}    % 达到此时间后重启此接收器进程    默认：5000毫秒</span></span><br><span class="line">        {extra_sinks, [</span><br><span class="line">            {msg_lager_event, [</span><br><span class="line">                {handlers, [</span><br><span class="line">                    {lager_file_backend, [</span><br><span class="line">                        {file, <span class="string">"msg.log"</span>},</span><br><span class="line">                        {level, '=info'},</span><br><span class="line">                        {formatter_config, [time, <span class="string">" "</span>, <span class="string">"["</span>, serverity, <span class="string">"]"</span>, module, <span class="string">":"</span>, function, <span class="string">" "</span>, message, <span class="string">"\n"</span>]}</span><br><span class="line">                    ]}</span><br><span class="line">                ]}</span><br><span class="line">            ]}</span><br><span class="line">        ]}</span><br><span class="line">    ]}</span><br><span class="line">].</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><p><a href="https://github.com/erlang-lager/lager#custom-formatting">自定义输出样式</a></p>
</li>
<li><p><a href="https://github.com/erlang-lager/lager#internal-log-rotation">日志切分策略</a></p>
</li>
<li><p><a href="https://github.com/erlang-lager/lager#colored-terminal-output">终端彩色输出</a></p>
</li>
<li><p><a href="https://hex.pm/packages?_utf8=%E2%9C%93&amp;search=lager&amp;sort=recent_downloads">其他 lager 后端</a></p>
</li>
</ul>
<h4 id="2、lager的日志等级划分"><a href="#2、lager的日志等级划分" class="headerlink" title="2、lager的日志等级划分"></a>2、lager 的日志等级划分</h4><p>从低到高分别为：</p>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line">debug &lt; info &lt; notice &lt; warning &lt; error &lt; critical &lt; alter &lt; emergency</span><br></pre></td></tr></tbody></table></figure>

<p>lager 支持类似 syslog 形式定义级别，例如：</p>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line">info        % info及更高级别（&gt;=info 隐式）</span><br><span class="line">=debug      % 只有debug级别</span><br><span class="line">!=info      % 除了info级别以外的所有级别</span><br><span class="line">&lt;=notice    % notice及更低级别</span><br><span class="line">&lt;warning    % 任何小于warning的级别</span><br></pre></td></tr></tbody></table></figure>



<h4 id="3、使用技巧"><a href="#3、使用技巧" class="headerlink" title="3、使用技巧"></a>3、使用技巧</h4><ul>
<li><p>使用自定义 sink</p>
  <figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">-define</span><span class="params">(MSG(Args)</span>, msg:info<span class="params">(Args)</span>).</span><br><span class="line"><span class="keyword">-define</span><span class="params">(MSG(Format, Args)</span>, msg:info<span class="params">(Format, Args)</span>).</span><br><span class="line"><span class="keyword">-define</span><span class="params">(MSG(Attr, Format, Args)</span>, msg:info<span class="params">(Attr, Format, Args)</span>).</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">msg</span><span class="params">(Args)</span> -&gt;</span></span><br><span class="line">    ?MSG(Args).</span><br><span class="line"><span class="function"><span class="title">msg</span><span class="params">(Format, Args)</span> -&gt;</span></span><br><span class="line">    ?MSG(Format, Args).</span><br><span class="line"><span class="function"><span class="title">msg</span><span class="params">(Attr, Format, Args)</span> -&gt;</span></span><br><span class="line">    ?MSG(Attr, Format, Args).</span><br></pre></td></tr></tbody></table></figure>

</li>
<li><p>扩展 sink 打印的日志不会显示到 console 中，可以通过一下方法实现</p>
  <figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">%% msg_lager_event 为自定义sink</span></span><br><span class="line"><span class="comment">%% 添加handler</span></span><br><span class="line"><span class="number">1</span>&gt; gen_event:add_handler(msg_lager_event, lager_console_backend, [{level, debug}]).    </span><br><span class="line">ok</span><br><span class="line"><span class="comment">%% 删除handler</span></span><br><span class="line"><span class="number">2</span>&gt; gen_event:delete_handler(msg_lager_event, lager_console_backend, [{level, debug}]).</span><br><span class="line">ok</span><br></pre></td></tr></tbody></table></figure>

</li>
<li><p>查看日志级别</p>
  <figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span>&gt; lager:get_loglevel(lager_console_backend).</span><br><span class="line">debug</span><br><span class="line"><span class="number">2</span>&gt; lager:get_loglevel({lager_file_backend,<span class="string">"info.log"</span>}).</span><br><span class="line">debug</span><br><span class="line"><span class="number">3</span>&gt; lager:get_loglevel({lager_file_backend,<span class="string">"error.log"</span>}).</span><br><span class="line">error</span><br><span class="line"><span class="number">4</span>&gt; lager:get_loglevel(msg_lager_event, {lager_file_backend,<span class="string">"msg.log"</span>}).</span><br><span class="line">info</span><br></pre></td></tr></tbody></table></figure>

</li>
<li><p>设置日志级别</p>
  <figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span>&gt; lager:set_loglevel(lager_console_backend,'info'). </span><br><span class="line">ok</span><br><span class="line"><span class="number">2</span>&gt; lager:set_loglevel({lager_file_backend, <span class="string">"info.log"</span>},'debug').                          </span><br><span class="line"><span class="number">15</span>:<span class="number">16</span>:<span class="number">01.552</span> [Undefined]lager_file_backend:Undefined Changed loglevel <span class="keyword">of</span> c:/Users/gz1417/Desktop/lager_test/log/info.log to debug</span><br><span class="line">ok</span><br><span class="line"><span class="number">3</span>&gt; lager:set_loglevel(msg_lager_event, {lager_file_backend, <span class="string">"msg.log"</span>}, undefined, 'info').</span><br><span class="line">ok</span><br><span class="line"><span class="number">15</span>:<span class="number">12</span>:<span class="number">43.449</span> [Undefined]lager_file_backend:Undefined Changed loglevel <span class="keyword">of</span> c:/Users/gz1417/Desktop/lager_test/log/msg.log to info</span><br></pre></td></tr></tbody></table></figure>

</li>
<li><p>trace console</p>
  <figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span>&gt; lager:set_loglevel(lager_console_backend, info).     <span class="comment">% 设置为info及以上级别</span></span><br><span class="line">ok</span><br><span class="line"><span class="number">2</span>&gt; log1:debug(<span class="string">"aaa"</span>).                                   <span class="comment">% debug级别已经无法在console中输出内容</span></span><br><span class="line">ok</span><br><span class="line"><span class="number">3</span>&gt; log1:info(<span class="string">"aaa"</span>).                                    <span class="comment">% info级别可以</span></span><br><span class="line">ok</span><br><span class="line"><span class="number">15</span>:<span class="number">53</span>:<span class="number">20.297</span> [Undefined]log1:info aaa</span><br><span class="line"><span class="number">4</span>&gt; lager:trace_console([{module, log1}]).               <span class="comment">% 设置跟踪log1模块的所有日志</span></span><br><span class="line">{ok,{lager_console_backend,[{module,log1}],debug}}</span><br><span class="line"><span class="number">5</span>&gt; log1:debug(<span class="string">"aaa"</span>).                   </span><br><span class="line">ok</span><br><span class="line"><span class="number">15</span>:<span class="number">51</span>:<span class="number">13.308</span> [Undefined]log1:debug aaa</span><br></pre></td></tr></tbody></table></figure>

</li>
<li><p>trace 自定义 tag</p>
  <figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span>&gt; lager:set_loglevel(lager_console_backend, info).     <span class="comment">% 设置为info及以上级别</span></span><br><span class="line">ok</span><br><span class="line"><span class="number">2</span>&gt; log1:debug([{name, dy}],<span class="string">"~s"</span>,[<span class="string">"s_name"</span>]).  <span class="comment">% debug级别已经无法在console中输出内容</span></span><br><span class="line">ok</span><br><span class="line"><span class="number">3</span>&gt; lager:trace_console([{name, dy}]).</span><br><span class="line">{ok,{lager_console_backend,[{name, dy}], debug}}</span><br><span class="line"><span class="number">4</span>&gt; log1:debug([{name, dy}],<span class="string">"~s"</span>,[<span class="string">"s_name"</span>]).   <span class="comment">% 设置跟踪tag为dy的所有日志</span></span><br><span class="line">ok</span><br><span class="line"><span class="number">16</span>:<span class="number">41</span>:<span class="number">47.715</span> [Undefined]log1:debug s_name</span><br></pre></td></tr></tbody></table></figure>

</li>
<li><p>trace 文件 但输出到文件中的日志并不能打印到 console 需要 gen_event:add_handler 添加 lager_console_backend</p>
  <figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span>&gt; lager:trace_file(<span class="string">"msg.log"</span>, [{sink, msg_lager_event}, {module, log1}]).</span><br><span class="line">{ok,{{lager_file_backend,<span class="string">"c:/Users/gz1417/Desktop/lager_test/log/msg.log"</span>},</span><br><span class="line">     [{sink,msg_lager_event},{module,log1}],</span><br><span class="line">     debug}}</span><br></pre></td></tr></tbody></table></figure>

</li>
<li><p>演示文件</p>
</li>
</ul>
<figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">%% log.hrl</span></span><br><span class="line"><span class="keyword">-define</span><span class="params">(DEBUG(Args)</span>, lager:debug<span class="params">(Args)</span>).</span><br><span class="line"><span class="keyword">-define</span><span class="params">(DEBUG(Format, Args)</span>, lager:debug<span class="params">(Format, Args)</span>).</span><br><span class="line"><span class="keyword">-define</span><span class="params">(DEBUG(Attr, Format, Args)</span>, lager:debug<span class="params">(Attr, Format, Args)</span>).</span><br><span class="line"></span><br><span class="line"><span class="keyword">-define</span><span class="params">(INFO(Args)</span>, lager:info<span class="params">(Args)</span>).</span><br><span class="line"><span class="keyword">-define</span><span class="params">(INFO(Format, Args)</span>, lager:info<span class="params">(Format, Args)</span>).</span><br><span class="line"><span class="keyword">-define</span><span class="params">(INFO(Attr, Format, Args)</span>, lager:info<span class="params">(Attr, Format, Args)</span>).</span><br><span class="line"></span><br><span class="line"><span class="keyword">-define</span><span class="params">(MSG(Args)</span>, msg:info<span class="params">(Args)</span>).</span><br><span class="line"><span class="keyword">-define</span><span class="params">(MSG(Format, Args)</span>, msg:info<span class="params">(Format, Args)</span>).</span><br><span class="line"><span class="keyword">-define</span><span class="params">(MSG(Attr, Format, Args)</span>, msg:info<span class="params">(Attr, Format, Args)</span>).</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight erlang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">%% log1.erl</span></span><br><span class="line"><span class="keyword">-module</span><span class="params">(log1)</span>.</span><br><span class="line"></span><br><span class="line"><span class="keyword">-include</span><span class="params">(<span class="string">"log.hrl"</span>)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% API</span></span><br><span class="line"><span class="keyword">-export</span><span class="params">([</span></span><br><span class="line"><span class="params">    debug/<span class="number">1</span>, debug/<span class="number">2</span>, debug/<span class="number">3</span>,</span></span><br><span class="line"><span class="params">    info/<span class="number">1</span>, info/<span class="number">2</span>, info/<span class="number">3</span>,</span></span><br><span class="line"><span class="params">    msg/<span class="number">1</span>, msg/<span class="number">2</span>, msg/<span class="number">3</span></span></span><br><span class="line"><span class="params">])</span>.</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">debug</span><span class="params">(Args)</span> -&gt;</span></span><br><span class="line">    ?DEBUG(Args).</span><br><span class="line"><span class="function"><span class="title">debug</span><span class="params">(Format, Args)</span> -&gt;</span></span><br><span class="line">    ?DEBUG(Format, Args).</span><br><span class="line"><span class="function"><span class="title">debug</span><span class="params">(Attr, Format, Args)</span> -&gt;</span></span><br><span class="line">    ?DEBUG(Attr, Format, Args).</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">info</span><span class="params">(Args)</span> -&gt;</span></span><br><span class="line">    ?INFO(Args).</span><br><span class="line"><span class="function"><span class="title">info</span><span class="params">(Format, Args)</span> -&gt;</span></span><br><span class="line">    ?INFO(Format, Args).</span><br><span class="line"><span class="function"><span class="title">info</span><span class="params">(Attr, Format, Args)</span> -&gt;</span></span><br><span class="line">    ?INFO(Attr, Format, Args).</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">msg</span><span class="params">(Args)</span> -&gt;</span></span><br><span class="line">    ?MSG(Args).</span><br><span class="line"><span class="function"><span class="title">msg</span><span class="params">(Format, Args)</span> -&gt;</span></span><br><span class="line">    ?MSG(Format, Args).</span><br><span class="line"><span class="function"><span class="title">msg</span><span class="params">(Attr, Format, Args)</span> -&gt;</span></span><br><span class="line">    ?MSG(Attr, Format, Args).</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>erlang</tag>
        <tag>log</tag>
      </tags>
  </entry>
  <entry>
    <title>那些歌</title>
    <url>/2021/04/15/%E9%82%A3%E4%BA%9B%E6%AD%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h5 id="x1f442-网易云"><a href="#x1f442-网易云" class="headerlink" title="👂网易云"></a><span class="github-emoji" alias="ear" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f442.png?v8">👂</span>网易云</h5>
    <div id="aplayer-xaHgFgJv" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="6647556685" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>


]]></content>
      <tags>
        <tag>essay</tag>
      </tags>
  </entry>
  <entry>
    <title>todo</title>
    <url>/2021/04/15/todo/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Todo…</p>
<span id="more"></span>

<h4 id="Erlang"><a href="#Erlang" class="headerlink" title="Erlang"></a>Erlang</h4><p>gc</p>
<p>rika</p>
<p>hot_reload</p>
<p>cluster</p>
<p>node</p>
<p>io:user</p>
<p>binary</p>
<h4 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h4><h4 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h4><p>主从</p>
<h4 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h4><p>tcp</p>
<p>udp</p>
<p>http</p>
<p>mqtt</p>
<p>coap</p>
]]></content>
  </entry>
</search>
